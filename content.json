{"meta":{"title":"Lokya","subtitle":"Lokya‘s blog","description":"lokya lokya blog","author":"Lokya","url":"https://lokya.github.io","root":"/"},"pages":[{"title":"简介","date":"2019-05-06T08:42:12.708Z","updated":"2019-05-06T08:42:12.708Z","comments":true,"path":"about/index.html","permalink":"https://lokya.github.io/about/index.html","excerpt":"","text":"I am lokya我欲乘风归去，又恐琼楼玉宇，高处不胜寒，起舞弄清影，何似在人间。。。。。。 先写这么多吧。。。。。"},{"title":"","date":"2019-05-03T02:06:32.254Z","updated":"2019-05-03T02:06:32.254Z","comments":true,"path":"mylist/index.html","permalink":"https://lokya.github.io/mylist/index.html","excerpt":"","text":""},{"title":"归档","date":"2019-05-06T03:17:19.125Z","updated":"2019-05-06T03:17:19.125Z","comments":true,"path":"blog/archives/index.html","permalink":"https://lokya.github.io/blog/archives/index.html","excerpt":"","text":""},{"title":"所有分类","date":"2019-05-05T15:13:20.494Z","updated":"2019-05-05T15:13:20.494Z","comments":true,"path":"blog/categories/index.html","permalink":"https://lokya.github.io/blog/categories/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2019-05-07T01:28:53.737Z","updated":"2019-05-07T01:28:53.737Z","comments":true,"path":"blog/tags/index.html","permalink":"https://lokya.github.io/blog/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"个人摄影 - 第一期","slug":"shoot/shoot_1","date":"2019-05-06T09:16:38.802Z","updated":"2019-05-06T15:09:02.124Z","comments":true,"path":"2019/05/06/shoot/shoot_1/","link":"","permalink":"https://lokya.github.io/2019/05/06/shoot/shoot_1/","excerpt":"","text":"介绍 拍摄时间 - 2018年05月19日 地点 - 公司旁小路 闲谈天色阴暗，雨势渐小。雨珠在花和叶上欢乐的跳动。从叫做叶的平台跳下，落在地上，渗进土里。梦着下次和花的轮回。 备注图片是我自己拍的，如果要转发和使用，请打声招呼，或者注明出处。 请勿私自盗用，谢谢","categories":[{"name":"拍照摄影","slug":"拍照摄影","permalink":"https://lokya.github.io/categories/拍照摄影/"}],"tags":[{"name":"拍照摄影","slug":"拍照摄影","permalink":"https://lokya.github.io/tags/拍照摄影/"}]},{"title":"ES6-变量","slug":"knowledge/es6/lesson_1","date":"2019-05-06T08:50:20.293Z","updated":"2019-05-07T08:55:30.512Z","comments":true,"path":"2019/05/06/knowledge/es6/lesson_1/","link":"","permalink":"https://lokya.github.io/2019/05/06/knowledge/es6/lesson_1/","excerpt":"","text":"let 和 constlet声明变量，类似于var，但是let有作用域的概念。const 声明常量，一旦声明后，不可改变。const 声明后要立马初始化。 作用域 作用域顾名思义就是只有在某个区域内起作用。let 就只能在其作用域中起作用。 1234567&#123; let a = 10; var b = 1;&#125;a // ReferenceError: a is not defined.b // 1 变量提升 var 命令会发生“变量提升”现象，即变量可以在声明之前使用，值为undefined。 let 定义的变量如果在声明之前使用会报错。 暂时性死区 如果区块中存在let和const命令，这个区块对这些命令声明的变量，从一开始就形成了封闭作用域（暂时性死区）。凡是在声明之前就使用这些变量，就会报错。 重复声明 let不允许在相同作用域内，重复声明同一个变量。 const本质 const实际上保证的，并不是变量的值不得改动，而是变量指向的那个内存地址所保存的数据不得改动。 对于简单类型的数据（数值、字符串、布尔值），值就保存在变量指向的那个内存地址，因此等同于常量。但对于复合类型的数据（主要是对象和数组），变量指向的内存地址，保存的只是一个指向实际数据的指针，const只能保证这个指针是固定的（即总是指向另一个固定的地址），至于它指向的数据结构是不是可变的，就完全不能控制了。 global对象顶层对象，在浏览器环境指的是window对象，在 Node 指的是global对象。 ES5 之中，顶层对象的属性与全局变量是等价的。12345window.a = 1;a // 1a = 2;window.a // 2 为了保持兼容性，var命令和function命令声明的全局变量，依旧是顶层对象的属性； let命令、const命令、class命令声明的全局变量，不属于顶层对象的属性","categories":[{"name":"javascript","slug":"javascript","permalink":"https://lokya.github.io/categories/javascript/"}],"tags":[{"name":"javascript","slug":"javascript","permalink":"https://lokya.github.io/tags/javascript/"},{"name":"ES6","slug":"ES6","permalink":"https://lokya.github.io/tags/ES6/"}]},{"title":"源","slug":"others/start","date":"2019-04-30T01:51:02.269Z","updated":"2019-05-06T15:09:08.465Z","comments":true,"path":"2019/04/30/others/start/","link":"","permalink":"https://lokya.github.io/2019/04/30/others/start/","excerpt":"","text":"原因我一直是一个不太喜欢写博客和文章的人，从业这么久，不喜欢去csdn或者博客园去发布文章。总觉得有时间还是看看书，娱乐娱乐比较好。忽然觉得有一个属于自己的地方，发点自己想想写的挺不错的。 打算想利用这个博客写点自己的东西，不论是技术分享还是技术笔记，或者生活杂记，都记录下来。例如拍个照片，可以发上来，这是一种记忆。 Emmmm其实也不知道说什么好，总之，希望利用好这个博客吧。","categories":[{"name":"杂记","slug":"杂记","permalink":"https://lokya.github.io/categories/杂记/"}],"tags":[]}]}